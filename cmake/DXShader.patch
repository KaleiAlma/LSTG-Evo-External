diff --git a/cmake/modules/CrossCompile.cmake b/cmake/modules/CrossCompile.cmake
index 76a3078a..e9892ec6 100644
--- a/cmake/modules/CrossCompile.cmake
+++ b/cmake/modules/CrossCompile.cmake
@@ -1,4 +1,4 @@
-function(llvm_create_cross_target_internal target_name toochain buildtype)
+function(llvm_create_cross_target_internal target_name toolchain buildtype)
 
   if(NOT DEFINED LLVM_${target_name}_BUILD)
     set(LLVM_${target_name}_BUILD "${CMAKE_BINARY_DIR}/${target_name}")
@@ -16,13 +16,18 @@ function(llvm_create_cross_target_internal target_name toochain buildtype)
     COMMAND ${CMAKE_COMMAND} -E make_directory ${LLVM_${target_name}_BUILD}
     COMMENT "Creating ${LLVM_${target_name}_BUILD}...")
 
+  if (buildtype)
+    set(build_type_flags "-DCMAKE_BUILD_TYPE=${buildtype}")
+  endif()
+
   add_custom_command(OUTPUT ${LLVM_${target_name}_BUILD}/CMakeCache.txt
-    COMMAND ${CMAKE_COMMAND} -G "${CMAKE_GENERATOR}"
-        ${CROSS_TOOLCHAIN_FLAGS_${target_name}} ${CMAKE_SOURCE_DIR}
+    COMMAND ${CMAKE_COMMAND} ${build_type_flags}
+        -G "${CMAKE_GENERATOR}" -DLLVM_TARGETS_TO_BUILD=${LLVM_TARGETS_TO_BUILD}
+        -DLLVM_REQUIRES_EH=ON
+        ${CROSS_TOOLCHAIN_FLAGS_${target_name}} ${CMAKE_CURRENT_SOURCE_DIR}
     WORKING_DIRECTORY ${LLVM_${target_name}_BUILD}
     DEPENDS ${LLVM_${target_name}_BUILD}
     COMMENT "Configuring ${target_name} LLVM...")
-
   add_custom_target(CONFIGURE_LLVM_${target_name}
                     DEPENDS ${LLVM_${target_name}_BUILD}/CMakeCache.txt)
 
@@ -30,20 +35,18 @@ function(llvm_create_cross_target_internal target_name toochain buildtype)
                                       ${LLVM_${target_name}_BUILD})
 
   if(NOT IS_DIRECTORY ${LLVM_${target_name}_BUILD})
-    
 
     message(STATUS "Configuring ${target_name} build...")
     execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory
       ${LLVM_${target_name}_BUILD} )
 
-    message(STATUS "Configuring ${target_name} targets...")
-    if (buildtype)
-      set(build_type_flags "-DCMAKE_BUILD_TYPE=${buildtype}")
-    endif()
-    execute_process(COMMAND ${CMAKE_COMMAND} ${build_type_flags}
-        -G "${CMAKE_GENERATOR}" -DLLVM_TARGETS_TO_BUILD=${LLVM_TARGETS_TO_BUILD}
-        ${CROSS_TOOLCHAIN_FLAGS_${target_name}} ${CMAKE_SOURCE_DIR}
-      WORKING_DIRECTORY ${LLVM_${target_name}_BUILD} )
+    # message(STATUS "Configuring ${target_name} targets...")
+    # execute_process(COMMAND ${CMAKE_COMMAND} ${build_type_flags}
+    #       -G "${CMAKE_GENERATOR}" -DLLVM_TARGETS_TO_BUILD=${LLVM_TARGETS_TO_BUILD}
+    #       -DLLVM_REQUIRES_EH=ON
+    #       ${CROSS_TOOLCHAIN_FLAGS_${target_name}} ${CMAKE_CURRENT_SOURCE_DIR}
+    #   WORKING_DIRECTORY ${LLVM_${target_name}_BUILD})
+
   endif(NOT IS_DIRECTORY ${LLVM_${target_name}_BUILD})
 
 endfunction()
diff --git a/tools/clang/tools/dxcompiler/CMakeLists.txt b/tools/clang/tools/dxcompiler/CMakeLists.txt
index 004d2e5a..7db7842d 100644
--- a/tools/clang/tools/dxcompiler/CMakeLists.txt
+++ b/tools/clang/tools/dxcompiler/CMakeLists.txt
@@ -126,7 +126,7 @@ if (MSVC)
   find_package(DiaSDK REQUIRED) # Used for constants and declarations.
 endif (MSVC)
 
-add_clang_library(dxcompiler SHARED ${SOURCES})
+add_clang_library(dxcompiler ${LSTGEXT_LIBTYPE} ${SOURCES})
 add_dependencies(dxcompiler TablegenHLSLOptions) 
 if (MSVC)
   # No DxcEtw on non-Windows platforms.
